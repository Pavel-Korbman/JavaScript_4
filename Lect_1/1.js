// –°–±–æ—Ä—â–∏–∫ –º—É—Å–æ—Ä–∞ 
// ‚Äì —Ñ–æ–Ω–æ–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å, –∫–æ—Ç–æ—Ä—ã–π —É–ø—Ä–∞–≤–ª—è–µ—Ç —É–¥–∞–ª–µ–Ω–∏–µ–º –Ω–µ–Ω—É–∂–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –≤ –ø–∞–º—è—Ç–∏. 


let obj = {
    animal: 'Dog'
};

let obj2 = obj;
obj = null;

console.log(obj2);
console.log(obj);

// –¢–∏–ø –¥–∞–Ω–Ω—ã—Ö Symbol 

// –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∏–∑ —Å–µ–±—è —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä. –ó–Ω–∞—á–µ–Ω–∏–µ –≤—Å–µ–≥–¥–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ, –¥–∞–∂–µ —É –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, –æ–±—ä—è–≤–ª–µ–Ω–Ω—ã—Ö —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º –æ–ø–∏—Å–∞–Ω–∏–µ–º. –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –æ–¥–Ω–æ–º—É –æ–ø–∏—Å–∞–Ω–∏—é —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞–ª –æ–¥–∏–Ω –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä, –µ–≥–æ –Ω—É–∂–Ω–æ –æ–±—ä—è–≤–∏—Ç—å –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º —Ä–µ–µ—Å—Ç—Ä–µ. –ü–æ–ª—è –æ–±—ä–µ–∫—Ç–∞ —Å –∫–ª—é—á–∞–º–∏, —Ç–∏–ø –∫–æ—Ç–æ—Ä—ã—Ö Symbol, —Å–∫—Ä—ã—Ç—ã –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä–∞ –∏—Ç–µ—Ä–∞—Ç–æ—Ä–∞–º–∏.

// –°–∏—Å—Ç–µ–º–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã 
// –ò–º–µ—é—Ç—Å—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã, –∫–æ—Ç–æ—Ä—ã–º–∏ –º—ã –º–æ–∂–µ–º –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –ø–æ–≤–µ–¥–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤. –û–Ω–∏ —Å–æ–¥–µ—Ä–∂–∞—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ JavaScript –∏ –Ω–∞–∑—ã–≤–∞—é—Ç—Å—è —Å–∏—Å—Ç–µ–º–Ω—ã–º–∏.

// –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑ –Ω–∏—Ö: 
// üìå Symbol.hasInstance 
// üìå Symbol.isConcatSpreadable 
// üìå Symbol.iterator 
// üìå Symbol.toPrimitive

let symbol = Symbol(); // –æ–±—ä—è–≤–ª–µ–Ω–∏–µ
symbol = Symbol('dog');
console.log(symbol); // Symbol(dog)

// –ü—Ä–∏ –∫–∞–∂–¥–æ–º —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–∏–º–≤–æ–ª–∞, –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ, –¥–∞–∂–µ –µ—Å–ª–∏ –º—ã —Å–æ–∑–¥–∞–¥–∏–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–∏–º–≤–æ–ª–æ–≤ —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º –æ–ø–∏—Å–∞–Ω–∏–µ–º:
const dog1ID = Symbol('dog');
const dog2ID = Symbol('dog');

console.log(dog1ID == dog2ID); // false

// –ó–Ω–∞—á–µ–Ω–∏—è –Ω–µ –≤—ã–≤–æ–¥—è—Ç—Å—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ –∏ –∫–æ–Ω—Å–æ–ª–∏
// alert(dog1ID); // Uncaught TypeError:
// alert(dog1ID.toString); // function toString() { [native code] }

// description

// –ï—Å–ª–∏ –º—ã —Ö–æ—Ç–∏–º –≤—ã–≤–µ—Å—Ç–∏ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–∏–º–≤–æ–ª–∞, –º–æ–∂–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —Å–≤–æ–π—Å—Ç–≤—É description
const dogID = Symbol('my super dog');
console.log(dogID.description); // my super dog
// alert(dogID.description); // my super dog

// –°–∏–º–≤–æ–ª—ã –≤ –æ–±—ä–µ–∫—Ç–µ

let id = Symbol('idDog');

let buddy = {
    [id]: '–ñ—É—á–∫–∞'
}

console.log(buddy); // {Symbol(idDog): '–ñ—É—á–∫–∞'}
console.log(buddy[id]); // –ñ—É—á–∫–∞

buddy[id] = '–ë–æ–±–∏–∫';
console.log(buddy[id]); // –ë–æ–±–∏–∫

// –ï—Å–ª–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏–º–≤–æ–ª—ã –≤ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞—Ö - —Å—Ç–æ—Ä–æ–Ω–Ω–∏–π –∫–æ–¥ –º–æ–∂–µ—Ç –∏—Ö –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å.

let buddies = {
    [Symbol('–ñ—É—á–∫–∞')]: '–ñ—É—á–∫–∞',
    [Symbol('–ë–æ–±–∏–∫')]: '–ë–æ–±–∏–∫',
    [Symbol('–ë–æ–±–∏–∫')]: '–ë–æ–±–∏–∫',
    [Symbol('–®–∞—Ä–∏–∫')]: '–®–∞—Ä–∏–∫',
    elephant: '–°–ª–æ–Ω'
}
console.log(buddies); // {elephant: '–°–ª–æ–Ω', Symbol(–ñ—É—á–∫–∞): '–ñ—É—á–∫–∞', Symbol(–ë–æ–±–∏–∫): '–ë–æ–±–∏–∫', Symbol(–ë–æ–±–∏–∫): '–ë–æ–±–∏–∫', Symbol(–®–∞—Ä–∏–∫): '–®–∞—Ä–∏–∫'}

// Object.assign –∫–æ–ø–∏—Ä—É–µ—Ç –≤—Å–µ —Å–≤–æ–π—Å—Ç–≤–∞, –≤ —Ç–æ–º —á–∏—Å–ª–µ, —Å–∏–º–≤–æ–ª—å–Ω—ã–µ –≤ –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç

let newBuddies = {};

Object.assign(newBuddies, buddies);
console.log(newBuddies); // {elephant: '–°–ª–æ–Ω', Symbol(–ñ—É—á–∫–∞): '–ñ—É—á–∫–∞', Symbol(–ë–æ–±–∏–∫): '–ë–æ–±–∏–∫', Symbol(–ë–æ–±–∏–∫): '–ë–æ–±–∏–∫', Symbol(–®–∞—Ä–∏–∫): '–®–∞—Ä–∏–∫'}

buddies.cat = '–ë–∞—Ä—Å–∏–∫'; 
console.log(buddies); // –±–∞—Ä—Å–∏–∫ –ø–æ—è–≤–∏—Ç—Å—è –≤ –∫–æ–Ω—Å–æ–ª–∏ –ø—Ä–∏ –ø–µ—á–∞—Ç–∏ –∏–∑ 72 –∏ 82 —Å—Ç—Ä–æ–∫–∏ –∏ –Ω–µ –ø–æ—è–≤–∏—Ç—å—Å—è –≤ console.log(newBuddies) –≤ 79 —Å—Ç—Ä–æ–∫–µ



